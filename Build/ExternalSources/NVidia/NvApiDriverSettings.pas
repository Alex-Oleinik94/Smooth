(*****************************************************************************\
|*                                                                           *|
|*      Copyright NVIDIA Corporation.  All rights reserved.                  *|
|*                                                                           *|
|*   NOTICE TO USER:                                                         *|
|*                                                                           *|
|*   This source code is subject to NVIDIA ownership rights under U.S.       *|
|*   and international Copyright laws.  Users and possessors of this         *|
|*   source code are hereby granted a nonexclusive, royalty-free             *|
|*   license to use this code in individual and commercial software.         *|
|*                                                                           *|
|*   NVIDIA MAKES NO REPRESENTATION ABOUT THE SUITABILITY OF THIS SOURCE     *|
|*   CODE FOR ANY PURPOSE. IT IS PROVIDED "AS IS" WITHOUT EXPRESS OR         *|
|*   IMPLIED WARRANTY OF ANY KIND. NVIDIA DISCLAIMS ALL WARRANTIES WITH      *|
|*   REGARD TO THIS SOURCE CODE, INCLUDING ALL IMPLIED WARRANTIES OF         *|
|*   MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR          *|
|*   PURPOSE. IN NO EVENT SHALL NVIDIA BE LIABLE FOR ANY SPECIAL,            *|
|*   INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES          *|
|*   WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN      *|
|*   AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING     *|
|*   OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOURCE      *|
|*   CODE.                                                                   *|
|*                                                                           *|
|*   U.S. Government End Users. This source code is a "commercial item"      *|
|*   as that term is defined at 48 C.F.R. 2.101 (OCT 1995), consisting       *|
|*   of "commercial computer  software" and "commercial computer software    *|
|*   documentation" as such terms are used in 48 C.F.R. 12.212 (SEPT 1995)   *|
|*   and is provided to the U.S. Government only as a commercial end item.   *|
|*   Consistent with 48 C.F.R.12.212 and 48 C.F.R. 227.7202-1 through        *|
|*   227.7202-4 (JUNE 1995), all U.S. Government End Users acquire the       *|
|*   source code with only those rights set forth herein.                    *|
|*                                                                           *|
|*   Any use of this source code in individual and commercial software must  *|
|*   include, in the user documentation and internal comments to the code,   *|
|*   the above Disclaimer and U.S. Government End Users Notice.              *|
|*                                                                           *|
|*                                                                           *|
\*****************************************************************************)

{$MODE OBJFPC}
{$PACKRECORDS C}

unit NvApiDriverSettings;

interface

uses
	 nvapi_lite_common
	;

const
	OGL_AA_LINE_GAMMA_STRING = 'Antialiasing - Line gamma'; 
	OGL_DEEP_COLOR_SCANOUT_STRING = 'Deep color for 3D applications'; 
	OGL_DEFAULT_SWAP_INTERVAL_STRING = 'OpenGL default swap interval'; 
	OGL_DEFAULT_SWAP_INTERVAL_FRACTIONAL_STRING = 'OpenGL default swap interval fraction'; 
	OGL_DEFAULT_SWAP_INTERVAL_SIGN_STRING = 'OpenGL default swap interval sign'; 
	OGL_EVENT_LOG_SEVERITY_THRESHOLD_STRING = 'Event Log Severity Threshold'; 
	OGL_EXTENSION_STRING_VERSION_STRING = 'Extension String version'; 
	OGL_FORCE_BLIT_STRING = 'Buffer-flipping mode'; 
	OGL_FORCE_STEREO_STRING = 'Force Stereo shuttering'; 
	OGL_IMPLICIT_GPU_AFFINITY_STRING = 'Preferred OpenGL GPU'; 
	OGL_MAX_FRAMES_ALLOWED_STRING = 'Maximum frames allowed'; 
	OGL_MULTIMON_STRING = 'Multi-display/mixed-GPU acceleration'; 
	OGL_OVERLAY_PIXEL_TYPE_STRING = 'Exported Overlay pixel types'; 
	OGL_OVERLAY_SUPPORT_STRING = 'Enable overlay'; 
	OGL_QUALITY_ENHANCEMENTS_STRING = 'High level control of the rendering quality on OpenGL'; 
	OGL_SINGLE_BACKDEPTH_BUFFER_STRING = 'Unified back/depth buffer'; 
	OGL_THREAD_CONTROL_STRING = 'Threaded optimization'; 
	OGL_TRIPLE_BUFFER_STRING = 'Triple buffering'; 
	OGL_VIDEO_EDITING_MODE_STRING = 'OpenGL video-editing mode'; 
	AA_BEHAVIOR_FLAGS_STRING = 'Antialiasing - Behavior Flags'; 
	AA_MODE_ALPHATOCOVERAGE_STRING = 'Antialiasing - Transparency Multisampling'; 
	AA_MODE_GAMMACORRECTION_STRING = 'Antialiasing - Gamma correction'; 
	AA_MODE_METHOD_STRING = 'Antialiasing - Setting'; 
	AA_MODE_REPLAY_STRING = 'Antialiasing - Transparency Supersampling'; 
	AA_MODE_SELECTOR_STRING = 'Antialiasing - Mode'; 
	AA_MODE_SELECTOR_SLIAA_STRING = 'Antialiasing - SLI AA'; 
	ANISO_MODE_LEVEL_STRING = 'Anisotropic filtering setting'; 
	ANISO_MODE_SELECTOR_STRING = 'Anisotropic filtering mode'; 
	APPLICATION_PROFILE_NOTIFICATION_TIMEOUT_STRING = 'Application Profile Notification Popup Timeout'; 
	APPLICATION_STEAM_ID_STRING = 'Steam Application ID'; 
	CPL_HIDDEN_PROFILE_STRING = 'Do not display this profile in the Control Panel'; 
	CUDA_EXCLUDED_GPUS_STRING = 'List of Universal GPU ids'; 
	D3DOGL_GPU_MAX_POWER_STRING = 'Maximum GPU Power'; 
	EXPORT_PERF_COUNTERS_STRING = 'Export Performance Counters'; 
	FXAA_ALLOW_STRING = 'NVIDIA Predefined FXAA Usage'; 
	FXAA_ENABLE_STRING = 'Enable FXAA'; 
	FXAA_INDICATOR_ENABLE_STRING = 'Enable FXAA Indicator'; 
	MCSFRSHOWSPLIT_STRING = 'SLI indicator'; 
	OPTIMUS_MAXAA_STRING = 'Maximum AA samples allowed for a given application'; 
	PHYSXINDICATOR_STRING = 'Display the PhysX indicator'; 
	PREFERRED_PSTATE_STRING = 'Power management mode'; 
	PREVENT_UI_AF_OVERRIDE_STRING = 'No override of Anisotropic filtering'; 
	PS_FRAMERATE_LIMITER_STRING = 'Frame Rate Limiter'; 
	PS_FRAMERATE_LIMITER_GPS_CTRL_STRING = 'Frame Rate Monitor'; 
	PS_FRAMERATE_MONITOR_CTRL_STRING = 'Frame Rate Monitor Control'; 
	SHIM_MAXRES_STRING = 'Maximum resolution allowed for a given application'; 
	SHIM_MCCOMPAT_STRING = 'Optimus flags for enabled applications'; 
	SHIM_RENDERING_MODE_STRING = 'Enable application for Optimus'; 
	SHIM_RENDERING_OPTIONS_STRING = 'Shim Rendering Mode Options per application for Optimus'; 
	SLI_GPU_COUNT_STRING = 'Number of GPUs to use on SLI rendering mode'; 
	SLI_PREDEFINED_GPU_COUNT_STRING = 'NVIDIA predefined number of GPUs to use on SLI rendering mode'; 
	SLI_PREDEFINED_GPU_COUNT_DX10_STRING = 'NVIDIA predefined number of GPUs to use on SLI rendering mode on DirectX 10'; 
	SLI_PREDEFINED_MODE_STRING = 'NVIDIA predefined SLI mode'; 
	SLI_PREDEFINED_MODE_DX10_STRING = 'NVIDIA predefined SLI mode on DirectX 10'; 
	SLI_RENDERING_MODE_STRING = 'SLI rendering mode'; 
	VRPRERENDERLIMIT_STRING = 'Virtual Reality pre-rendered frames'; 
	VRRFEATUREINDICATOR_STRING = 'Toggle the VRR global feature'; 
	VRROVERLAYINDICATOR_STRING = 'Display the VRR Overlay Indicator'; 
	VRRREQUESTSTATE_STRING = 'VRR requested state'; 
	VSYNCSMOOTHAFR_STRING = 'Flag to control smooth AFR behavior'; 
	VSYNCVRRCONTROL_STRING = 'Variable refresh Rate'; 
	VSYNC_BEHAVIOR_FLAGS_STRING = 'Vsync - Behavior Flags'; 
	WKS_API_STEREO_EYES_EXCHANGE_STRING = 'Stereo - Swap eyes'; 
	WKS_API_STEREO_MODE_STRING = 'Stereo - Display mode'; 
	WKS_MEMORY_ALLOCATION_POLICY_STRING = 'Memory Allocation Policy'; 
	WKS_STEREO_DONGLE_SUPPORT_STRING = 'Stereo - Dongle Support'; 
	WKS_STEREO_SUPPORT_STRING = 'Stereo - Enable'; 
	WKS_STEREO_SWAP_MODE_STRING = 'Stereo swap mode'; 
	AO_MODE_STRING = 'Ambient Occlusion'; 
	AO_MODE_ACTIVE_STRING = 'NVIDIA Predefined Ambient Occlusion Usage'; 
	AUTO_LODBIASADJUST_STRING = 'Texture filtering - Driver Controlled LOD Bias'; 
	ICAFE_LOGO_CONFIG_STRING = 'ICafe Settings'; 
	LODBIASADJUST_STRING = 'Texture filtering - LOD Bias'; 
	MAXWELL_B_SAMPLE_INTERLEAVE_STRING = 'Enable sample interleaving (MFAA)'; 
	PRERENDERLIMIT_STRING = 'Maximum pre-rendered frames'; 
	PS_SHADERDISKCACHE_STRING = 'Shader Cache'; 
	PS_TEXFILTER_ANISO_OPTS2_STRING = 'Texture filtering - Anisotropic sample optimization'; 
	PS_TEXFILTER_BILINEAR_IN_ANISO_STRING = 'Texture filtering - Anisotropic filter optimization'; 
	PS_TEXFILTER_DISABLE_TRILIN_SLOPE_STRING = 'Texture filtering - Trilinear optimization'; 
	PS_TEXFILTER_NO_NEG_LODBIAS_STRING = 'Texture filtering - Negative LOD bias'; 
	QUALITY_ENHANCEMENTS_STRING = 'Texture filtering - Quality'; 
	REFRESH_RATE_OVERRIDE_STRING = 'Preferred refresh rate'; 
	SET_POWER_THROTTLE_FOR_PCIe_COMPLIANCE_STRING = 'PowerThrottle'; 
	SET_VAB_DATA_STRING = 'VAB Default Data'; 
	VSYNCMODE_STRING = 'Vertical Sync'; 
	VSYNCTEARCONTROL_STRING = 'Vertical Sync Tear Control'; 
type
	NvEnumerator = NvU32;
	NvSignedEnumerator = NvS32;
type
	NvESetting = NvEnumerator;
const
	OGL_AA_LINE_GAMMA_ID = $2089BF6C;
	OGL_DEEP_COLOR_SCANOUT_ID = $2097C2F6;
	OGL_DEFAULT_SWAP_INTERVAL_ID = $206A6582;
	OGL_DEFAULT_SWAP_INTERVAL_FRACTIONAL_ID = $206C4581;
	OGL_DEFAULT_SWAP_INTERVAL_SIGN_ID = $20655CFA;
	OGL_EVENT_LOG_SEVERITY_THRESHOLD_ID = $209DF23E;
	OGL_EXTENSION_STRING_VERSION_ID = $20FF7493;
	OGL_FORCE_BLIT_ID = $201F619F;
	OGL_FORCE_STEREO_ID = $204D9A0C;
	OGL_IMPLICIT_GPU_AFFINITY_ID = $20D0F3E6;
	OGL_MAX_FRAMES_ALLOWED_ID = $208E55E3;
	OGL_MULTIMON_ID = $200AEBFC;
	OGL_OVERLAY_PIXEL_TYPE_ID = $209AE66F;
	OGL_OVERLAY_SUPPORT_ID = $206C28C4;
	OGL_QUALITY_ENHANCEMENTS_ID = $20797D6C;
	OGL_SINGLE_BACKDEPTH_BUFFER_ID = $20A29055;
	OGL_THREAD_CONTROL_ID = $20C1221E;
	OGL_TRIPLE_BUFFER_ID = $20FDD1F9;
	OGL_VIDEO_EDITING_MODE_ID = $20EE02B4;
	AA_BEHAVIOR_FLAGS_ID = $10ECDB82;
	AA_MODE_ALPHATOCOVERAGE_ID = $10FC2D9C;
	AA_MODE_GAMMACORRECTION_ID = $107D639D;
	AA_MODE_METHOD_ID = $10D773D2;
	AA_MODE_REPLAY_ID = $10D48A85;
	AA_MODE_SELECTOR_ID = $107EFC5B;
	AA_MODE_SELECTOR_SLIAA_ID = $107AFC5B;
	ANISO_MODE_LEVEL_ID = $101E61A9;
	ANISO_MODE_SELECTOR_ID = $10D2BB16;
	APPLICATION_PROFILE_NOTIFICATION_TIMEOUT_ID = $104554B6;
	APPLICATION_STEAM_ID_ID = $107CDDBC;
	CPL_HIDDEN_PROFILE_ID = $106D5CFF;
	CUDA_EXCLUDED_GPUS_ID = $10354FF8;
	D3DOGL_GPU_MAX_POWER_ID = $10D1EF29;
	EXPORT_PERF_COUNTERS_ID = $108F0841;
	FXAA_ALLOW_ID = $1034CB89;
	FXAA_ENABLE_ID = $1074C972;
	FXAA_INDICATOR_ENABLE_ID = $1068FB9C;
	MCSFRSHOWSPLIT_ID = $10287051;
	OPTIMUS_MAXAA_ID = $10F9DC83;
	PHYSXINDICATOR_ID = $1094F16F;
	PREFERRED_PSTATE_ID = $1057EB71;
	PREVENT_UI_AF_OVERRIDE_ID = $103BCCB5;
	PS_FRAMERATE_LIMITER_ID = $10834FEE;
	PS_FRAMERATE_LIMITER_GPS_CTRL_ID = $10834F01;
	PS_FRAMERATE_MONITOR_CTRL_ID = $10834F05;
	SHIM_MAXRES_ID = $10F9DC82;
	SHIM_MCCOMPAT_ID = $10F9DC80;
	SHIM_RENDERING_MODE_ID = $10F9DC81;
	SHIM_RENDERING_OPTIONS_ID = $10F9DC84;
	SLI_GPU_COUNT_ID = $1033DCD1;
	SLI_PREDEFINED_GPU_COUNT_ID = $1033DCD2;
	SLI_PREDEFINED_GPU_COUNT_DX10_ID = $1033DCD3;
	SLI_PREDEFINED_MODE_ID = $1033CEC1;
	SLI_PREDEFINED_MODE_DX10_ID = $1033CEC2;
	SLI_RENDERING_MODE_ID = $1033CED1;
	VRPRERENDERLIMIT_ID = $10111133;
	VRRFEATUREINDICATOR_ID = $1094F157;
	VRROVERLAYINDICATOR_ID = $1095F16F;
	VRRREQUESTSTATE_ID = $1094F1F7;
	VSYNCSMOOTHAFR_ID = $101AE763;
	VSYNCVRRCONTROL_ID = $10A879CE;
	VSYNC_BEHAVIOR_FLAGS_ID = $10FDEC23;
	WKS_API_STEREO_EYES_EXCHANGE_ID = $11AE435C;
	WKS_API_STEREO_MODE_ID = $11E91A61;
	WKS_MEMORY_ALLOCATION_POLICY_ID = $11112233;
	WKS_STEREO_DONGLE_SUPPORT_ID = $112493BD;
	WKS_STEREO_SUPPORT_ID = $11AA9E99;
	WKS_STEREO_SWAP_MODE_ID = $11333333;
	AO_MODE_ID = $00667329;
	AO_MODE_ACTIVE_ID = $00664339;
	AUTO_LODBIASADJUST_ID = $00638E8F;
	ICAFE_LOGO_CONFIG_ID = $00DB1337;
	LODBIASADJUST_ID = $00738E8F;
	MAXWELL_B_SAMPLE_INTERLEAVE_ID = $0098C1AC;
	PRERENDERLIMIT_ID = $007BA09E;
	PS_SHADERDISKCACHE_ID = $00198FFF;
	PS_TEXFILTER_ANISO_OPTS2_ID = $00E73211;
	PS_TEXFILTER_BILINEAR_IN_ANISO_ID = $0084CD70;
	PS_TEXFILTER_DISABLE_TRILIN_SLOPE_ID = $002ECAF2;
	PS_TEXFILTER_NO_NEG_LODBIAS_ID = $0019BB68;
	QUALITY_ENHANCEMENTS_ID = $00CE2691;
	REFRESH_RATE_OVERRIDE_ID = $0064B541;
	SET_POWER_THROTTLE_FOR_PCIe_COMPLIANCE_ID = $00AE785C;
	SET_VAB_DATA_ID = $00AB8687;
	VSYNCMODE_ID = $00A879CF;
	VSYNCTEARCONTROL_ID = $005A375C;
	TOTAL_DWORD_SETTING_NUM = 82;
	TOTAL_WSTRING_SETTING_NUM = 4;
	TOTAL_SETTING_NUM = 86;
	INVALID_SETTING_ID = $FFFFFFFF;
type
	NvEValues_OGL_AA_LINE_GAMMA = NvEnumerator;
const
	OGL_AA_LINE_GAMMA_DISABLED = $10;
	OGL_AA_LINE_GAMMA_ENABLED = $23;
	OGL_AA_LINE_GAMMA_MIN = 1;
	OGL_AA_LINE_GAMMA_MAX = 100;
	OGL_AA_LINE_GAMMA_NUM_VALUES = 4;
	OGL_AA_LINE_GAMMA_DEFAULT = OGL_AA_LINE_GAMMA_DISABLED;
type
	NvEValues_OGL_DEEP_COLOR_SCANOUT = NvEnumerator;
const
	OGL_DEEP_COLOR_SCANOUT_DISABLE = 0;
	OGL_DEEP_COLOR_SCANOUT_ENABLE = 1;
	OGL_DEEP_COLOR_SCANOUT_NUM_VALUES = 2;
	OGL_DEEP_COLOR_SCANOUT_DEFAULT = OGL_DEEP_COLOR_SCANOUT_ENABLE;
type
	NvEValues_OGL_DEFAULT_SWAP_INTERVAL = NvEnumerator;
const
	OGL_DEFAULT_SWAP_INTERVAL_TEAR = 0;
	OGL_DEFAULT_SWAP_INTERVAL_VSYNC_ONE = 1;
	OGL_DEFAULT_SWAP_INTERVAL_VSYNC = 1;
	OGL_DEFAULT_SWAP_INTERVAL_VALUE_MASK = $0000FFFF;
	OGL_DEFAULT_SWAP_INTERVAL_FORCE_MASK = $F0000000;
	OGL_DEFAULT_SWAP_INTERVAL_FORCE_OFF = $F0000000;
	OGL_DEFAULT_SWAP_INTERVAL_FORCE_ON = $10000000;
	OGL_DEFAULT_SWAP_INTERVAL_APP_CONTROLLED = $00000000;
	OGL_DEFAULT_SWAP_INTERVAL_DISABLE = $ffffffff;
	OGL_DEFAULT_SWAP_INTERVAL_NUM_VALUES = 9;
	OGL_DEFAULT_SWAP_INTERVAL_DEFAULT = OGL_DEFAULT_SWAP_INTERVAL_VSYNC_ONE;
type
	NvEValues_OGL_DEFAULT_SWAP_INTERVAL_FRACTIONAL = NvEnumerator;
const
	OGL_DEFAULT_SWAP_INTERVAL_FRACTIONAL_ZERO_SCANLINES = 0;
	OGL_DEFAULT_SWAP_INTERVAL_FRACTIONAL_ONE_FULL_FRAME_OF_SCANLINES = 100;
	OGL_DEFAULT_SWAP_INTERVAL_FRACTIONAL_NUM_VALUES = 2;
	OGL_DEFAULT_SWAP_INTERVAL_FRACTIONAL_DEFAULT = 0;
type
	NvEValues_OGL_DEFAULT_SWAP_INTERVAL_SIGN = NvEnumerator;
const
	OGL_DEFAULT_SWAP_INTERVAL_SIGN_POSITIVE = 0;
	OGL_DEFAULT_SWAP_INTERVAL_SIGN_NEGATIVE = 1;
	OGL_DEFAULT_SWAP_INTERVAL_SIGN_NUM_VALUES = 2;
	OGL_DEFAULT_SWAP_INTERVAL_SIGN_DEFAULT = OGL_DEFAULT_SWAP_INTERVAL_SIGN_POSITIVE;
type
	NvEValues_OGL_EVENT_LOG_SEVERITY_THRESHOLD = NvEnumerator;
const
	OGL_EVENT_LOG_SEVERITY_THRESHOLD_DISABLE = 0;
	OGL_EVENT_LOG_SEVERITY_THRESHOLD_CRITICAL = 1;
	OGL_EVENT_LOG_SEVERITY_THRESHOLD_WARNING = 2;
	OGL_EVENT_LOG_SEVERITY_THRESHOLD_INFORMATION = 3;
	OGL_EVENT_LOG_SEVERITY_THRESHOLD_ALL = 4;
	OGL_EVENT_LOG_SEVERITY_THRESHOLD_NUM_VALUES = 5;
	OGL_EVENT_LOG_SEVERITY_THRESHOLD_DEFAULT = OGL_EVENT_LOG_SEVERITY_THRESHOLD_CRITICAL;
type
	NvEValues_OGL_FORCE_BLIT = NvEnumerator;
const
	OGL_FORCE_BLIT_ON = 1;
	OGL_FORCE_BLIT_OFF = 0;
	OGL_FORCE_BLIT_NUM_VALUES = 2;
	OGL_FORCE_BLIT_DEFAULT = OGL_FORCE_BLIT_OFF;
type
	NvEValues_OGL_FORCE_STEREO = NvEnumerator;
const
	OGL_FORCE_STEREO_OFF = 0;
	OGL_FORCE_STEREO_ON = 1;
	OGL_FORCE_STEREO_NUM_VALUES = 2;
	OGL_FORCE_STEREO_DEFAULT = OGL_FORCE_STEREO_OFF;
const
	OGL_IMPLICIT_GPU_AFFINITY_ENV_VAR = 'OGL_DEFAULT_RENDERING_GPU';
	OGL_IMPLICIT_GPU_AFFINITY_AUTOSELECT = 'autoselect';
	OGL_IMPLICIT_GPU_AFFINITY_NUM_VALUES = 1;
	OGL_IMPLICIT_GPU_AFFINITY_DEFAULT = OGL_IMPLICIT_GPU_AFFINITY_AUTOSELECT;
type
	NvEValues_OGL_MULTIMON = NvEnumerator;
const
	OGL_MULTIMON_SINGLE_MONITOR = 0;
	OGL_MULTIMON_COMPATIBILITY_LCD = 1;
	OGL_MULTIMON_COMPATIBILITY_GCD = 2;
	OGL_MULTIMON_PERFORMANCE_LCD = 3;
	OGL_MULTIMON_PERFORMANCE_GCD = 4;
	OGL_MULTIMON_EXTENDED_SINGLE_MONITOR = 5;
	OGL_MULTIMON_PERFORMANCE_QUADRO = 6;
	OGL_MULTIMON_MULTIMON_BUFFER = 7;
	OGL_MULTIMON_NUM_VALUES = 8;
	OGL_MULTIMON_DEFAULT = OGL_MULTIMON_PERFORMANCE_LCD;
type
	NvEValues_OGL_OVERLAY_PIXEL_TYPE = NvEnumerator;
const
	OGL_OVERLAY_PIXEL_TYPE_NONE = $0;
	OGL_OVERLAY_PIXEL_TYPE_CI = $1;
	OGL_OVERLAY_PIXEL_TYPE_RGBA = $2;
	OGL_OVERLAY_PIXEL_TYPE_CI_AND_RGBA = $3;
	OGL_OVERLAY_PIXEL_TYPE_NUM_VALUES = 4;
	OGL_OVERLAY_PIXEL_TYPE_DEFAULT = OGL_OVERLAY_PIXEL_TYPE_CI;
type
	NvEValues_OGL_OVERLAY_SUPPORT = NvEnumerator;
const
	OGL_OVERLAY_SUPPORT_OFF = 0;
	OGL_OVERLAY_SUPPORT_ON = 1;
	OGL_OVERLAY_SUPPORT_FORCE_SW = 2;
	OGL_OVERLAY_SUPPORT_NUM_VALUES = 3;
	OGL_OVERLAY_SUPPORT_DEFAULT = OGL_OVERLAY_SUPPORT_OFF;
type
	NvEValues_OGL_QUALITY_ENHANCEMENTS = NvSignedEnumerator;
const
	OGL_QUALITY_ENHANCEMENTS_HQUAL = -10;
	OGL_QUALITY_ENHANCEMENTS_QUAL = 0;
	OGL_QUALITY_ENHANCEMENTS_PERF = 10;
	OGL_QUALITY_ENHANCEMENTS_HPERF = 20;
	OGL_QUALITY_ENHANCEMENTS_NUM_VALUES = 4;
	OGL_QUALITY_ENHANCEMENTS_DEFAULT = OGL_QUALITY_ENHANCEMENTS_QUAL;
type
	NvEValues_OGL_SINGLE_BACKDEPTH_BUFFER = NvEnumerator;
const
	OGL_SINGLE_BACKDEPTH_BUFFER_DISABLE = $0;
	OGL_SINGLE_BACKDEPTH_BUFFER_ENABLE = $1;
	OGL_SINGLE_BACKDEPTH_BUFFER_USE_HW_DEFAULT = $ffffffff;
	OGL_SINGLE_BACKDEPTH_BUFFER_NUM_VALUES = 3;
	OGL_SINGLE_BACKDEPTH_BUFFER_DEFAULT = OGL_SINGLE_BACKDEPTH_BUFFER_DISABLE;
type
	NvEValues_OGL_THREAD_CONTROL = NvEnumerator;
const
	OGL_THREAD_CONTROL_ENABLE = $00000001;
	OGL_THREAD_CONTROL_DISABLE = $00000002;
	OGL_THREAD_CONTROL_NUM_VALUES = 2;
	OGL_THREAD_CONTROL_DEFAULT = 0;
type
	NvEValues_OGL_TRIPLE_BUFFER = NvEnumerator;
const
	OGL_TRIPLE_BUFFER_DISABLED = $00000000;
	OGL_TRIPLE_BUFFER_ENABLED = $00000001;
	OGL_TRIPLE_BUFFER_NUM_VALUES = 2;
	OGL_TRIPLE_BUFFER_DEFAULT = OGL_TRIPLE_BUFFER_DISABLED;
type
	NvEValues_OGL_VIDEO_EDITING_MODE = NvEnumerator;
const
	OGL_VIDEO_EDITING_MODE_DISABLE = $00000000;
	OGL_VIDEO_EDITING_MODE_ENABLE = $00000001;
	OGL_VIDEO_EDITING_MODE_NUM_VALUES = 2;
	OGL_VIDEO_EDITING_MODE_DEFAULT = OGL_VIDEO_EDITING_MODE_DISABLE;
type
	NvEValues_AA_BEHAVIOR_FLAGS = NvEnumerator;
const
	AA_BEHAVIOR_FLAGS_NONE = $00000000;
	AA_BEHAVIOR_FLAGS_TREAT_OVERRIDE_AS_APP_CONTROLLED = $00000001;
	AA_BEHAVIOR_FLAGS_TREAT_OVERRIDE_AS_ENHANCE = $00000002;
	AA_BEHAVIOR_FLAGS_DISABLE_OVERRIDE = $00000003;
	AA_BEHAVIOR_FLAGS_TREAT_ENHANCE_AS_APP_CONTROLLED = $00000004;
	AA_BEHAVIOR_FLAGS_TREAT_ENHANCE_AS_OVERRIDE = $00000008;
	AA_BEHAVIOR_FLAGS_DISABLE_ENHANCE = $0000000c;
	AA_BEHAVIOR_FLAGS_MAP_VCAA_TO_MULTISAMPLING = $00010000;
	AA_BEHAVIOR_FLAGS_SLI_DISABLE_TRANSPARENCY_SUPERSAMPLING = $00020000;
	AA_BEHAVIOR_FLAGS_DISABLE_CPLAA = $00040000;
	AA_BEHAVIOR_FLAGS_SKIP_RT_DIM_CHECK_FOR_ENHANCE = $00080000;
	AA_BEHAVIOR_FLAGS_DISABLE_SLIAA = $00100000;
	AA_BEHAVIOR_FLAGS_DEFAULT = $00000000;
	AA_BEHAVIOR_FLAGS_AA_RT_BPP_DIV_4 = $f0000000;
	AA_BEHAVIOR_FLAGS_AA_RT_BPP_DIV_4_SHIFT = 28;
	AA_BEHAVIOR_FLAGS_NON_AA_RT_BPP_DIV_4 = $0f000000;
	AA_BEHAVIOR_FLAGS_NON_AA_RT_BPP_DIV_4_SHIFT = 24;
	AA_BEHAVIOR_FLAGS_MASK = $ff1f000f;
	AA_BEHAVIOR_FLAGS_NUM_VALUES = 18;
type
	NvEValues_AA_MODE_ALPHATOCOVERAGE = NvEnumerator;
const
	AA_MODE_ALPHATOCOVERAGE_MODE_MASK = $00000004;
	AA_MODE_ALPHATOCOVERAGE_MODE_OFF = $00000000;
	AA_MODE_ALPHATOCOVERAGE_MODE_ON = $00000004;
	AA_MODE_ALPHATOCOVERAGE_MODE_MAX = $00000004;
	AA_MODE_ALPHATOCOVERAGE_NUM_VALUES = 4;
	AA_MODE_ALPHATOCOVERAGE_DEFAULT = $00000000;
type
	NvEValues_AA_MODE_GAMMACORRECTION = NvEnumerator;
const
	AA_MODE_GAMMACORRECTION_MASK = $00000003;
	AA_MODE_GAMMACORRECTION_OFF = $00000000;
	AA_MODE_GAMMACORRECTION_ON_IF_FOS = $00000001;
	AA_MODE_GAMMACORRECTION_ON_ALWAYS = $00000002;
	AA_MODE_GAMMACORRECTION_MAX = $00000002;
	AA_MODE_GAMMACORRECTION_DEFAULT = $00000000;
	AA_MODE_GAMMACORRECTION_DEFAULT_TESLA = $00000002;
	AA_MODE_GAMMACORRECTION_DEFAULT_FERMI = $00000002;
	AA_MODE_GAMMACORRECTION_NUM_VALUES = 8;
type
	NvEValues_AA_MODE_METHOD = NvEnumerator;
const
	AA_MODE_METHOD_NONE = $0;
	AA_MODE_METHOD_SUPERSAMPLE_2X_H = $1;
	AA_MODE_METHOD_SUPERSAMPLE_2X_V = $2;
	AA_MODE_METHOD_SUPERSAMPLE_1_5X1_5 = $2;
	AA_MODE_METHOD_FREE_0x03 = $3;
	AA_MODE_METHOD_FREE_0x04 = $4;
	AA_MODE_METHOD_SUPERSAMPLE_4X = $5;
	AA_MODE_METHOD_SUPERSAMPLE_4X_BIAS = $6;
	AA_MODE_METHOD_SUPERSAMPLE_4X_GAUSSIAN = $7;
	AA_MODE_METHOD_FREE_0x08 = $8;
	AA_MODE_METHOD_FREE_0x09 = $9;
	AA_MODE_METHOD_SUPERSAMPLE_9X = $A;
	AA_MODE_METHOD_SUPERSAMPLE_9X_BIAS = $B;
	AA_MODE_METHOD_SUPERSAMPLE_16X = $C;
	AA_MODE_METHOD_SUPERSAMPLE_16X_BIAS = $D;
	AA_MODE_METHOD_MULTISAMPLE_2X_DIAGONAL = $E;
	AA_MODE_METHOD_MULTISAMPLE_2X_QUINCUNX = $F;
	AA_MODE_METHOD_MULTISAMPLE_4X = $10;
	AA_MODE_METHOD_FREE_0x11 = $11;
	AA_MODE_METHOD_MULTISAMPLE_4X_GAUSSIAN = $12;
	AA_MODE_METHOD_MIXEDSAMPLE_4X_SKEWED_4TAP = $13;
	AA_MODE_METHOD_FREE_0x14 = $14;
	AA_MODE_METHOD_FREE_0x15 = $15;
	AA_MODE_METHOD_MIXEDSAMPLE_6X = $16;
	AA_MODE_METHOD_MIXEDSAMPLE_6X_SKEWED_6TAP = $17;
	AA_MODE_METHOD_MIXEDSAMPLE_8X = $18;
	AA_MODE_METHOD_MIXEDSAMPLE_8X_SKEWED_8TAP = $19;
	AA_MODE_METHOD_MIXEDSAMPLE_16X = $1a;
	AA_MODE_METHOD_MULTISAMPLE_4X_GAMMA = $1b;
	AA_MODE_METHOD_MULTISAMPLE_16X = $1c;
	AA_MODE_METHOD_VCAA_32X_8v24 = $1d;
	AA_MODE_METHOD_CORRUPTION_CHECK = $1e;
	AA_MODE_METHOD_6X_CT = $1f;
	AA_MODE_METHOD_MULTISAMPLE_2X_DIAGONAL_GAMMA = $20;
	AA_MODE_METHOD_SUPERSAMPLE_4X_GAMMA = $21;
	AA_MODE_METHOD_MULTISAMPLE_4X_FOSGAMMA = $22;
	AA_MODE_METHOD_MULTISAMPLE_2X_DIAGONAL_FOSGAMMA = $23;
	AA_MODE_METHOD_SUPERSAMPLE_4X_FOSGAMMA = $24;
	AA_MODE_METHOD_MULTISAMPLE_8X = $25;
	AA_MODE_METHOD_VCAA_8X_4v4 = $26;
	AA_MODE_METHOD_VCAA_16X_4v12 = $27;
	AA_MODE_METHOD_VCAA_16X_8v8 = $28;
	AA_MODE_METHOD_MIXEDSAMPLE_32X = $29;
	AA_MODE_METHOD_SUPERVCAA_64X_4v12 = $2a;
	AA_MODE_METHOD_SUPERVCAA_64X_8v8 = $2b;
	AA_MODE_METHOD_MIXEDSAMPLE_64X = $2c;
	AA_MODE_METHOD_MIXEDSAMPLE_128X = $2d;
	AA_MODE_METHOD_COUNT = $2e;
	AA_MODE_METHOD_METHOD_MASK = $0000ffff;
	AA_MODE_METHOD_METHOD_MAX = $f1c57815;
	AA_MODE_METHOD_NUM_VALUES = 50;
	AA_MODE_METHOD_DEFAULT = AA_MODE_METHOD_NONE;
type
	NvEValues_AA_MODE_REPLAY = NvEnumerator;
const
	AA_MODE_REPLAY_SAMPLES_MASK = $00000070;
	AA_MODE_REPLAY_SAMPLES_ONE = $00000000;
	AA_MODE_REPLAY_SAMPLES_TWO = $00000010;
	AA_MODE_REPLAY_SAMPLES_FOUR = $00000020;
	AA_MODE_REPLAY_SAMPLES_EIGHT = $00000030;
	AA_MODE_REPLAY_SAMPLES_MAX = $00000030;
	AA_MODE_REPLAY_MODE_MASK = $0000000f;
	AA_MODE_REPLAY_MODE_OFF = $00000000;
	AA_MODE_REPLAY_MODE_ALPHA_TEST = $00000001;
	AA_MODE_REPLAY_MODE_PIXEL_KILL = $00000002;
	AA_MODE_REPLAY_MODE_DYN_BRANCH = $00000004;
	AA_MODE_REPLAY_MODE_OPTIMAL = $00000004;
	AA_MODE_REPLAY_MODE_ALL = $00000008;
	AA_MODE_REPLAY_MODE_MAX = $0000000f;
	AA_MODE_REPLAY_TRANSPARENCY = $00000023;
	AA_MODE_REPLAY_DISALLOW_TRAA = $00000100;
	AA_MODE_REPLAY_TRANSPARENCY_DEFAULT = $00000000;
	AA_MODE_REPLAY_TRANSPARENCY_DEFAULT_TESLA = $00000000;
	AA_MODE_REPLAY_TRANSPARENCY_DEFAULT_FERMI = $00000000;
	AA_MODE_REPLAY_MASK = $0000017f;
	AA_MODE_REPLAY_NUM_VALUES = 20;
	AA_MODE_REPLAY_DEFAULT = $00000000;
type
	NvEValues_AA_MODE_SELECTOR = NvEnumerator;
const
	AA_MODE_SELECTOR_MASK = $00000003;
	AA_MODE_SELECTOR_APP_CONTROL = $00000000;
	AA_MODE_SELECTOR_OVERRIDE = $00000001;
	AA_MODE_SELECTOR_ENHANCE = $00000002;
	AA_MODE_SELECTOR_MAX = $00000002;
	AA_MODE_SELECTOR_NUM_VALUES = 5;
	AA_MODE_SELECTOR_DEFAULT = AA_MODE_SELECTOR_APP_CONTROL;
type
	NvEValues_AA_MODE_SELECTOR_SLIAA = NvEnumerator;
const
	AA_MODE_SELECTOR_SLIAA_DISABLED = 0;
	AA_MODE_SELECTOR_SLIAA_ENABLED = 1;
	AA_MODE_SELECTOR_SLIAA_NUM_VALUES = 2;
	AA_MODE_SELECTOR_SLIAA_DEFAULT = AA_MODE_SELECTOR_SLIAA_DISABLED;
type
	NvEValues_ANISO_MODE_LEVEL = NvEnumerator;
const
	ANISO_MODE_LEVEL_MASK = $0000ffff;
	ANISO_MODE_LEVEL_NONE_POINT = $00000000;
	ANISO_MODE_LEVEL_NONE_LINEAR = $00000001;
	ANISO_MODE_LEVEL_MAX = $00000010;
	ANISO_MODE_LEVEL_DEFAULT = $00000001;
	ANISO_MODE_LEVEL_NUM_VALUES = 5;
type
	NvEValues_ANISO_MODE_SELECTOR = NvEnumerator;
const
	ANISO_MODE_SELECTOR_MASK = $0000000f;
	ANISO_MODE_SELECTOR_APP = $00000000;
	ANISO_MODE_SELECTOR_USER = $00000001;
	ANISO_MODE_SELECTOR_COND = $00000002;
	ANISO_MODE_SELECTOR_MAX = $00000002;
	ANISO_MODE_SELECTOR_DEFAULT = $00000000;
	ANISO_MODE_SELECTOR_NUM_VALUES = 6;
type
	NvEValues_APPLICATION_PROFILE_NOTIFICATION_TIMEOUT = NvEnumerator;
const
	APPLICATION_PROFILE_NOTIFICATION_TIMEOUT_DISABLED = 0;
	APPLICATION_PROFILE_NOTIFICATION_TIMEOUT_NINE_SECONDS = 9;
	APPLICATION_PROFILE_NOTIFICATION_TIMEOUT_FIFTEEN_SECONDS = 15;
	APPLICATION_PROFILE_NOTIFICATION_TIMEOUT_THIRTY_SECONDS = 30;
	APPLICATION_PROFILE_NOTIFICATION_TIMEOUT_ONE_MINUTE = 60;
	APPLICATION_PROFILE_NOTIFICATION_TIMEOUT_TWO_MINUTES = 120;
	APPLICATION_PROFILE_NOTIFICATION_TIMEOUT_NUM_VALUES = 6;
	APPLICATION_PROFILE_NOTIFICATION_TIMEOUT_DEFAULT = APPLICATION_PROFILE_NOTIFICATION_TIMEOUT_DISABLED;
type
	NvEValues_CPL_HIDDEN_PROFILE = NvEnumerator;
const
	CPL_HIDDEN_PROFILE_DISABLED = 0;
	CPL_HIDDEN_PROFILE_ENABLED = 1;
	CPL_HIDDEN_PROFILE_NUM_VALUES = 2;
	CPL_HIDDEN_PROFILE_DEFAULT = CPL_HIDDEN_PROFILE_DISABLED;
const
	CUDA_EXCLUDED_GPUS_NONE = 'none';
	CUDA_EXCLUDED_GPUS_NUM_VALUES = 1;
	CUDA_EXCLUDED_GPUS_DEFAULT = CUDA_EXCLUDED_GPUS_NONE;
const
	D3DOGL_GPU_MAX_POWER_DEFAULTPOWER = '0';
	D3DOGL_GPU_MAX_POWER_NUM_VALUES = 1;
	D3DOGL_GPU_MAX_POWER_DEFAULT = D3DOGL_GPU_MAX_POWER_DEFAULTPOWER;
type
	NvEValues_EXPORT_PERF_COUNTERS = NvEnumerator;
const
	EXPORT_PERF_COUNTERS_OFF = $00000000;
	EXPORT_PERF_COUNTERS_ON = $00000001;
	EXPORT_PERF_COUNTERS_NUM_VALUES = 2;
	EXPORT_PERF_COUNTERS_DEFAULT = EXPORT_PERF_COUNTERS_OFF;
type
	NvEValues_FXAA_ALLOW = NvEnumerator;
const
	FXAA_ALLOW_DISALLOWED = 0;
	FXAA_ALLOW_ALLOWED = 1;
	FXAA_ALLOW_NUM_VALUES = 2;
	FXAA_ALLOW_DEFAULT = FXAA_ALLOW_ALLOWED;
type
	NvEValues_FXAA_ENABLE = NvEnumerator;
const
	FXAA_ENABLE_OFF = 0;
	FXAA_ENABLE_ON = 1;
	FXAA_ENABLE_NUM_VALUES = 2;
	FXAA_ENABLE_DEFAULT = FXAA_ENABLE_OFF;
type
	NvEValues_FXAA_INDICATOR_ENABLE = NvEnumerator;
const
	FXAA_INDICATOR_ENABLE_OFF = 0;
	FXAA_INDICATOR_ENABLE_ON = 1;
	FXAA_INDICATOR_ENABLE_NUM_VALUES = 2;
	FXAA_INDICATOR_ENABLE_DEFAULT = FXAA_INDICATOR_ENABLE_OFF;
type
	NvEValues_MCSFRSHOWSPLIT = NvEnumerator;
const
	MCSFRSHOWSPLIT_DISABLED = $34534064;
	MCSFRSHOWSPLIT_ENABLED = $24545582;
	MCSFRSHOWSPLIT_NUM_VALUES = 2;
	MCSFRSHOWSPLIT_DEFAULT = MCSFRSHOWSPLIT_DISABLED;
type
	NvEValues_OPTIMUS_MAXAA = NvEnumerator;
const
	OPTIMUS_MAXAA_MIN = 0;
	OPTIMUS_MAXAA_MAX = 16;
	OPTIMUS_MAXAA_NUM_VALUES = 2;
	OPTIMUS_MAXAA_DEFAULT = 0;
type
	NvEValues_PHYSXINDICATOR = NvEnumerator;
const
	PHYSXINDICATOR_DISABLED = $34534064;
	PHYSXINDICATOR_ENABLED = $24545582;
	PHYSXINDICATOR_NUM_VALUES = 2;
	PHYSXINDICATOR_DEFAULT = PHYSXINDICATOR_DISABLED;
type
	NvEValues_PREFERRED_PSTATE = NvEnumerator;
const
	PREFERRED_PSTATE_ADAPTIVE = $00000000;
	PREFERRED_PSTATE_PREFER_MAX = $00000001;
	PREFERRED_PSTATE_DRIVER_CONTROLLED = $00000002;
	PREFERRED_PSTATE_PREFER_CONSISTENT_PERFORMANCE = $00000003;
	PREFERRED_PSTATE_PREFER_MIN = $00000004;
	PREFERRED_PSTATE_MIN = $00000000;
	PREFERRED_PSTATE_MAX = $00000004;
	PREFERRED_PSTATE_NUM_VALUES = 7;
	PREFERRED_PSTATE_DEFAULT = PREFERRED_PSTATE_ADAPTIVE;
type
	NvEValues_PREVENT_UI_AF_OVERRIDE = NvEnumerator;
const
	PREVENT_UI_AF_OVERRIDE_OFF = 0;
	PREVENT_UI_AF_OVERRIDE_ON = 1;
	PREVENT_UI_AF_OVERRIDE_NUM_VALUES = 2;
	PREVENT_UI_AF_OVERRIDE_DEFAULT = PREVENT_UI_AF_OVERRIDE_OFF;
type
	NvEValues_PS_FRAMERATE_LIMITER = NvEnumerator;
const
	PS_FRAMERATE_LIMITER_DISABLED = $00000000;
	PS_FRAMERATE_LIMITER_FPS_20 = $00000014;
	PS_FRAMERATE_LIMITER_FPS_30 = $0000001e;
	PS_FRAMERATE_LIMITER_FPS_40 = $00000028;
	PS_FRAMERATE_LIMITER_FPSMASK = $000000ff;
	PS_FRAMERATE_LIMITER_FORCE_VSYNC_OFF = $00040000;
	PS_FRAMERATE_LIMITER_GPS_WEB = $00080000;
	PS_FRAMERATE_LIMITER_FORCE_OPTIMUS_POLICY = $00100000;
	PS_FRAMERATE_LIMITER_DISALLOWED = $00200000;
	PS_FRAMERATE_LIMITER_USE_CPU_WAIT = $00400000;
	PS_FRAMERATE_LIMITER_THRESHOLD = $00000000;
	PS_FRAMERATE_LIMITER_TEMPERATURE = $02000000;
	PS_FRAMERATE_LIMITER_POWER = $04000000;
	PS_FRAMERATE_LIMITER_MODEMASK = $0f000000;
	PS_FRAMERATE_LIMITER_ACCURATE = $10000000;
	PS_FRAMERATE_LIMITER_ALLOW_WINDOWED = $20000000;
	PS_FRAMERATE_LIMITER_FORCEON = $40000000;
	PS_FRAMERATE_LIMITER_ENABLED = $80000000;
	PS_FRAMERATE_LIMITER_OPENGL_REMOTE_DESKTOP = $e010003c;
	PS_FRAMERATE_LIMITER_MASK = $ff7C00ff;
	PS_FRAMERATE_LIMITER_NUM_VALUES = 20;
	PS_FRAMERATE_LIMITER_DEFAULT = PS_FRAMERATE_LIMITER_DISABLED;
type
	NvEValues_PS_FRAMERATE_LIMITER_GPS_CTRL = NvEnumerator;
const
	PS_FRAMERATE_LIMITER_GPS_CTRL_DISABLED = $00000000;
	PS_FRAMERATE_LIMITER_GPS_CTRL_DECREASE_FILTER_MASK = $000001FF;
	PS_FRAMERATE_LIMITER_GPS_CTRL_PAUSE_TIME_MASK = $0000FE00;
	PS_FRAMERATE_LIMITER_GPS_CTRL_PAUSE_TIME_SHIFT = 9;
	PS_FRAMERATE_LIMITER_GPS_CTRL_TARGET_RENDER_TIME_MASK = $00FF0000;
	PS_FRAMERATE_LIMITER_GPS_CTRL_TARGET_RENDER_TIME_SHIFT = 16;
	PS_FRAMERATE_LIMITER_GPS_CTRL_PERF_STEP_SIZE_MASK = $1F000000;
	PS_FRAMERATE_LIMITER_GPS_CTRL_PERF_STEP_SIZE_SHIFT = 24;
	PS_FRAMERATE_LIMITER_GPS_CTRL_INCREASE_FILTER_MASK = $E0000000;
	PS_FRAMERATE_LIMITER_GPS_CTRL_INCREASE_FILTER_SHIFT = 29;
	PS_FRAMERATE_LIMITER_GPS_CTRL_OPTIMAL_SETTING = $4A5A3219;
	PS_FRAMERATE_LIMITER_GPS_CTRL_NUM_VALUES = 11;
	PS_FRAMERATE_LIMITER_GPS_CTRL_DEFAULT = PS_FRAMERATE_LIMITER_GPS_CTRL_DISABLED;
type
	NvEValues_PS_FRAMERATE_MONITOR_CTRL = NvEnumerator;
const
	PS_FRAMERATE_MONITOR_CTRL_DISABLED = $00000000;
	PS_FRAMERATE_MONITOR_CTRL_THRESHOLD_PCT_MASK = $000000FF;
	PS_FRAMERATE_MONITOR_CTRL_MOVING_AVG_X_MASK = $00000F00;
	PS_FRAMERATE_MONITOR_CTRL_MOVING_AVG_X_SHIFT = 8;
	PS_FRAMERATE_MONITOR_CTRL_OPTIMAL_SETTING = $00000364;
	PS_FRAMERATE_MONITOR_CTRL_NUM_VALUES = 5;
	PS_FRAMERATE_MONITOR_CTRL_DEFAULT = PS_FRAMERATE_MONITOR_CTRL_DISABLED;
type
	NvEValues_SHIM_MCCOMPAT = NvEnumerator;
const
	SHIM_MCCOMPAT_INTEGRATED = $00000000;
	SHIM_MCCOMPAT_ENABLE = $00000001;
	SHIM_MCCOMPAT_USER_EDITABLE = $00000002;
	SHIM_MCCOMPAT_MASK = $00000003;
	SHIM_MCCOMPAT_VIDEO_MASK = $00000004;
	SHIM_MCCOMPAT_VARYING_BIT = $00000008;
	SHIM_MCCOMPAT_AUTO_SELECT = $00000010;
	SHIM_MCCOMPAT_OVERRIDE_BIT = $80000000;
	SHIM_MCCOMPAT_NUM_VALUES = 8;
	SHIM_MCCOMPAT_DEFAULT = SHIM_MCCOMPAT_AUTO_SELECT;
type
	NvEValues_SHIM_RENDERING_MODE = NvEnumerator;
const
	SHIM_RENDERING_MODE_INTEGRATED = $00000000;
	SHIM_RENDERING_MODE_ENABLE = $00000001;
	SHIM_RENDERING_MODE_USER_EDITABLE = $00000002;
	SHIM_RENDERING_MODE_MASK = $00000003;
	SHIM_RENDERING_MODE_VIDEO_MASK = $00000004;
	SHIM_RENDERING_MODE_VARYING_BIT = $00000008;
	SHIM_RENDERING_MODE_AUTO_SELECT = $00000010;
	SHIM_RENDERING_MODE_OVERRIDE_BIT = $80000000;
	SHIM_RENDERING_MODE_NUM_VALUES = 8;
	SHIM_RENDERING_MODE_DEFAULT = SHIM_RENDERING_MODE_AUTO_SELECT;
type
	NvEValues_SHIM_RENDERING_OPTIONS = NvEnumerator;
const
	SHIM_RENDERING_OPTIONS_DEFAULT_RENDERING_MODE = $00000000;
	SHIM_RENDERING_OPTIONS_DISABLE_ASYNC_PRESENT = $00000001;
	SHIM_RENDERING_OPTIONS_EHSHELL_DETECT = $00000002;
	SHIM_RENDERING_OPTIONS_FLASHPLAYER_HOST_DETECT = $00000004;
	SHIM_RENDERING_OPTIONS_VIDEO_DRM_APP_DETECT = $00000008;
	SHIM_RENDERING_OPTIONS_IGNORE_OVERRIDES = $00000010;
	SHIM_RENDERING_OPTIONS_CHILDPROCESS_DETECT = $00000020;
	SHIM_RENDERING_OPTIONS_ENABLE_DWM_ASYNC_PRESENT = $00000040;
	SHIM_RENDERING_OPTIONS_PARENTPROCESS_DETECT = $00000080;
	SHIM_RENDERING_OPTIONS_ALLOW_INHERITANCE = $00000100;
	SHIM_RENDERING_OPTIONS_DISABLE_WRAPPERS = $00000200;
	SHIM_RENDERING_OPTIONS_DISABLE_DXGI_WRAPPERS = $00000400;
	SHIM_RENDERING_OPTIONS_PRUNE_UNSUPPORTED_FORMATS = $00000800;
	SHIM_RENDERING_OPTIONS_ENABLE_ALPHA_FORMAT = $00001000;
	SHIM_RENDERING_OPTIONS_IGPU_TRANSCODING = $00002000;
	SHIM_RENDERING_OPTIONS_DISABLE_CUDA = $00004000;
	SHIM_RENDERING_OPTIONS_ALLOW_CP_CAPS_FOR_VIDEO = $00008000;
	SHIM_RENDERING_OPTIONS_ENABLE_NEW_HOOKING = $00010000;
	SHIM_RENDERING_OPTIONS_DISABLE_DURING_SECURE_BOOT = $00020000;
	SHIM_RENDERING_OPTIONS_INVERT_FOR_QUADRO = $00040000;
	SHIM_RENDERING_OPTIONS_INVERT_FOR_MSHYBRID = $00080000;
	SHIM_RENDERING_OPTIONS_REGISTER_PROCESS_ENABLE_GOLD = $00100000;
	SHIM_RENDERING_OPTIONS_HANDLE_WINDOWED_MODE_PERF_OPT = $00200000;
	SHIM_RENDERING_OPTIONS_NUM_VALUES = 23;
	SHIM_RENDERING_OPTIONS_DEFAULT = SHIM_RENDERING_OPTIONS_DEFAULT_RENDERING_MODE;
type
	NvEValues_SLI_GPU_COUNT = NvEnumerator;
const
	SLI_GPU_COUNT_AUTOSELECT = $00000000;
	SLI_GPU_COUNT_ONE = $00000001;
	SLI_GPU_COUNT_TWO = $00000002;
	SLI_GPU_COUNT_THREE = $00000003;
	SLI_GPU_COUNT_FOUR = $00000004;
	SLI_GPU_COUNT_NUM_VALUES = 5;
	SLI_GPU_COUNT_DEFAULT = SLI_GPU_COUNT_AUTOSELECT;
type
	NvEValues_SLI_PREDEFINED_GPU_COUNT = NvEnumerator;
const
	SLI_PREDEFINED_GPU_COUNT_AUTOSELECT = $00000000;
	SLI_PREDEFINED_GPU_COUNT_ONE = $00000001;
	SLI_PREDEFINED_GPU_COUNT_TWO = $00000002;
	SLI_PREDEFINED_GPU_COUNT_THREE = $00000003;
	SLI_PREDEFINED_GPU_COUNT_FOUR = $00000004;
	SLI_PREDEFINED_GPU_COUNT_NUM_VALUES = 5;
	SLI_PREDEFINED_GPU_COUNT_DEFAULT = SLI_PREDEFINED_GPU_COUNT_AUTOSELECT;
type
	NvEValues_SLI_PREDEFINED_GPU_COUNT_DX10 = NvEnumerator;
const
	SLI_PREDEFINED_GPU_COUNT_DX10_AUTOSELECT = $00000000;
	SLI_PREDEFINED_GPU_COUNT_DX10_ONE = $00000001;
	SLI_PREDEFINED_GPU_COUNT_DX10_TWO = $00000002;
	SLI_PREDEFINED_GPU_COUNT_DX10_THREE = $00000003;
	SLI_PREDEFINED_GPU_COUNT_DX10_FOUR = $00000004;
	SLI_PREDEFINED_GPU_COUNT_DX10_NUM_VALUES = 5;
	SLI_PREDEFINED_GPU_COUNT_DX10_DEFAULT = SLI_PREDEFINED_GPU_COUNT_DX10_AUTOSELECT;
type
	NvEValues_SLI_PREDEFINED_MODE = NvEnumerator;
const
	SLI_PREDEFINED_MODE_AUTOSELECT = $00000000;
	SLI_PREDEFINED_MODE_FORCE_SINGLE = $00000001;
	SLI_PREDEFINED_MODE_FORCE_AFR = $00000002;
	SLI_PREDEFINED_MODE_FORCE_AFR2 = $00000003;
	SLI_PREDEFINED_MODE_FORCE_SFR = $00000004;
	SLI_PREDEFINED_MODE_FORCE_AFR_OF_SFR__FALLBACK_3AFR = $00000005;
	SLI_PREDEFINED_MODE_NUM_VALUES = 6;
	SLI_PREDEFINED_MODE_DEFAULT = SLI_PREDEFINED_MODE_AUTOSELECT;
type
	NvEValues_SLI_PREDEFINED_MODE_DX10 = NvEnumerator;
const
	SLI_PREDEFINED_MODE_DX10_AUTOSELECT = $00000000;
	SLI_PREDEFINED_MODE_DX10_FORCE_SINGLE = $00000001;
	SLI_PREDEFINED_MODE_DX10_FORCE_AFR = $00000002;
	SLI_PREDEFINED_MODE_DX10_FORCE_AFR2 = $00000003;
	SLI_PREDEFINED_MODE_DX10_FORCE_SFR = $00000004;
	SLI_PREDEFINED_MODE_DX10_FORCE_AFR_OF_SFR__FALLBACK_3AFR = $00000005;
	SLI_PREDEFINED_MODE_DX10_NUM_VALUES = 6;
	SLI_PREDEFINED_MODE_DX10_DEFAULT = SLI_PREDEFINED_MODE_DX10_AUTOSELECT;
type
	NvEValues_SLI_RENDERING_MODE = NvEnumerator;
const
	SLI_RENDERING_MODE_AUTOSELECT = $00000000;
	SLI_RENDERING_MODE_FORCE_SINGLE = $00000001;
	SLI_RENDERING_MODE_FORCE_AFR = $00000002;
	SLI_RENDERING_MODE_FORCE_AFR2 = $00000003;
	SLI_RENDERING_MODE_FORCE_SFR = $00000004;
	SLI_RENDERING_MODE_FORCE_AFR_OF_SFR__FALLBACK_3AFR = $00000005;
	SLI_RENDERING_MODE_NUM_VALUES = 6;
	SLI_RENDERING_MODE_DEFAULT = SLI_RENDERING_MODE_AUTOSELECT;
type
	NvEValues_VRPRERENDERLIMIT = NvEnumerator;
const
	VRPRERENDERLIMIT_MIN = $00;
	VRPRERENDERLIMIT_MAX = $ff;
	VRPRERENDERLIMIT_APP_CONTROLLED = $00;
	VRPRERENDERLIMIT_DEFAULT = $01;
	VRPRERENDERLIMIT_NUM_VALUES = 4;
type
	NvEValues_VRRFEATUREINDICATOR = NvEnumerator;
const
	VRRFEATUREINDICATOR_DISABLED = $0;
	VRRFEATUREINDICATOR_ENABLED = $1;
	VRRFEATUREINDICATOR_NUM_VALUES = 2;
	VRRFEATUREINDICATOR_DEFAULT = VRRFEATUREINDICATOR_ENABLED;
type
	NvEValues_VRROVERLAYINDICATOR = NvEnumerator;
const
	VRROVERLAYINDICATOR_DISABLED = $0;
	VRROVERLAYINDICATOR_ENABLED = $1;
	VRROVERLAYINDICATOR_NUM_VALUES = 2;
	VRROVERLAYINDICATOR_DEFAULT = VRROVERLAYINDICATOR_ENABLED;
type
	NvEValues_VRRREQUESTSTATE = NvEnumerator;
const
	VRRREQUESTSTATE_DISABLED = $0;
	VRRREQUESTSTATE_ENABLED = $1;
	VRRREQUESTSTATE_NUM_VALUES = 2;
	VRRREQUESTSTATE_DEFAULT = VRRREQUESTSTATE_ENABLED;
type
	NvEValues_VSYNCSMOOTHAFR = NvEnumerator;
const
	VSYNCSMOOTHAFR_OFF = $00000000;
	VSYNCSMOOTHAFR_ON = $00000001;
	VSYNCSMOOTHAFR_NUM_VALUES = 2;
	VSYNCSMOOTHAFR_DEFAULT = VSYNCSMOOTHAFR_OFF;
type
	NvEValues_VSYNCVRRCONTROL = NvEnumerator;
const
	VSYNCVRRCONTROL_DISABLE = $00000000;
	VSYNCVRRCONTROL_ENABLE = $00000001;
	VSYNCVRRCONTROL_NOTSUPPORTED = $9f95128e;
	VSYNCVRRCONTROL_NUM_VALUES = 3;
	VSYNCVRRCONTROL_DEFAULT = VSYNCVRRCONTROL_ENABLE;
type
	NvEValues_VSYNC_BEHAVIOR_FLAGS = NvEnumerator;
const
	VSYNC_BEHAVIOR_FLAGS_NONE = $00000000;
	VSYNC_BEHAVIOR_FLAGS_DEFAULT = $00000000;
	VSYNC_BEHAVIOR_FLAGS_IGNORE_FLIPINTERVAL_MULTIPLE = $00000001;
	VSYNC_BEHAVIOR_FLAGS_NUM_VALUES = 3;
type
	NvEValues_WKS_API_STEREO_EYES_EXCHANGE = NvEnumerator;
const
	WKS_API_STEREO_EYES_EXCHANGE_OFF = 0;
	WKS_API_STEREO_EYES_EXCHANGE_ON = 1;
	WKS_API_STEREO_EYES_EXCHANGE_NUM_VALUES = 2;
	WKS_API_STEREO_EYES_EXCHANGE_DEFAULT = WKS_API_STEREO_EYES_EXCHANGE_OFF;
type
	NvEValues_WKS_API_STEREO_MODE = NvEnumerator;
const
	WKS_API_STEREO_MODE_SHUTTER_GLASSES = 0;
	WKS_API_STEREO_MODE_VERTICAL_INTERLACED = 1;
	WKS_API_STEREO_MODE_TWINVIEW = 2;
	WKS_API_STEREO_MODE_NV17_SHUTTER_GLASSES_AUTO = 3;
	WKS_API_STEREO_MODE_NV17_SHUTTER_GLASSES_DAC0 = 4;
	WKS_API_STEREO_MODE_NV17_SHUTTER_GLASSES_DAC1 = 5;
	WKS_API_STEREO_MODE_COLOR_LINE = 6;
	WKS_API_STEREO_MODE_COLOR_INTERLEAVED = 7;
	WKS_API_STEREO_MODE_ANAGLYPH = 8;
	WKS_API_STEREO_MODE_HORIZONTAL_INTERLACED = 9;
	WKS_API_STEREO_MODE_SIDE_FIELD = 10;
	WKS_API_STEREO_MODE_SUB_FIELD = 11;
	WKS_API_STEREO_MODE_CHECKERBOARD = 12;
	WKS_API_STEREO_MODE_INVERSE_CHECKERBOARD = 13;
	WKS_API_STEREO_MODE_TRIDELITY_SL = 14;
	WKS_API_STEREO_MODE_TRIDELITY_MV = 15;
	WKS_API_STEREO_MODE_SEEFRONT = 16;
	WKS_API_STEREO_MODE_STEREO_MIRROR = 17;
	WKS_API_STEREO_MODE_FRAME_SEQUENTIAL = 18;
	WKS_API_STEREO_MODE_AUTODETECT_PASSIVE_MODE = 19;
	WKS_API_STEREO_MODE_AEGIS_DT_FRAME_SEQUENTIAL = 20;
	WKS_API_STEREO_MODE_OEM_EMITTER_FRAME_SEQUENTIAL = 21;
	WKS_API_STEREO_MODE_USE_HW_DEFAULT = $ffffffff;
	WKS_API_STEREO_MODE_DEFAULT_GL = 3;
	WKS_API_STEREO_MODE_NUM_VALUES = 24;
	WKS_API_STEREO_MODE_DEFAULT = WKS_API_STEREO_MODE_SHUTTER_GLASSES;
type
	NvEValues_WKS_MEMORY_ALLOCATION_POLICY = NvEnumerator;
const
	WKS_MEMORY_ALLOCATION_POLICY_AS_NEEDED = $0;
	WKS_MEMORY_ALLOCATION_POLICY_MODERATE_PRE_ALLOCATION = $1;
	WKS_MEMORY_ALLOCATION_POLICY_AGGRESSIVE_PRE_ALLOCATION = $2;
	WKS_MEMORY_ALLOCATION_POLICY_NUM_VALUES = 3;
	WKS_MEMORY_ALLOCATION_POLICY_DEFAULT = WKS_MEMORY_ALLOCATION_POLICY_AS_NEEDED;
type
	NvEValues_WKS_STEREO_DONGLE_SUPPORT = NvEnumerator;
const
	WKS_STEREO_DONGLE_SUPPORT_OFF = 0;
	WKS_STEREO_DONGLE_SUPPORT_DAC = 1;
	WKS_STEREO_DONGLE_SUPPORT_DLP = 2;
	WKS_STEREO_DONGLE_SUPPORT_NUM_VALUES = 3;
	WKS_STEREO_DONGLE_SUPPORT_DEFAULT = WKS_STEREO_DONGLE_SUPPORT_OFF;
type
	NvEValues_WKS_STEREO_SUPPORT = NvEnumerator;
const
	WKS_STEREO_SUPPORT_OFF = 0;
	WKS_STEREO_SUPPORT_ON = 1;
	WKS_STEREO_SUPPORT_NUM_VALUES = 2;
	WKS_STEREO_SUPPORT_DEFAULT = WKS_STEREO_SUPPORT_OFF;
type
	NvEValues_WKS_STEREO_SWAP_MODE = NvEnumerator;
const
	WKS_STEREO_SWAP_MODE_APPLICATION_CONTROL = $0;
	WKS_STEREO_SWAP_MODE_PER_EYE = $1;
	WKS_STEREO_SWAP_MODE_PER_EYE_PAIR = $2;
	WKS_STEREO_SWAP_MODE_LEGACY_BEHAVIOR = $3;
	WKS_STEREO_SWAP_MODE_NUM_VALUES = 4;
	WKS_STEREO_SWAP_MODE_DEFAULT = WKS_STEREO_SWAP_MODE_APPLICATION_CONTROL;
type
	NvEValues_AO_MODE = NvEnumerator;
const
	AO_MODE_OFF = 0;
	AO_MODE_LOW = 1;
	AO_MODE_MEDIUM = 2;
	AO_MODE_HIGH = 3;
	AO_MODE_NUM_VALUES = 4;
	AO_MODE_DEFAULT = AO_MODE_OFF;
type
	NvEValues_AO_MODE_ACTIVE = NvEnumerator;
const
	AO_MODE_ACTIVE_DISABLED = 0;
	AO_MODE_ACTIVE_ENABLED = 1;
	AO_MODE_ACTIVE_NUM_VALUES = 2;
	AO_MODE_ACTIVE_DEFAULT = AO_MODE_ACTIVE_DISABLED;
type
	NvEValues_AUTO_LODBIASADJUST = NvEnumerator;
const
	AUTO_LODBIASADJUST_OFF = $00000000;
	AUTO_LODBIASADJUST_ON = $00000001;
	AUTO_LODBIASADJUST_NUM_VALUES = 2;
	AUTO_LODBIASADJUST_DEFAULT = AUTO_LODBIASADJUST_ON;
type
	NvEValues_LODBIASADJUST = NvEnumerator;
const
	LODBIASADJUST_MIN = $ffffff80;
	LODBIASADJUST_MAX = 128;
	LODBIASADJUST_NUM_VALUES = 2;
	LODBIASADJUST_DEFAULT = 0;
type
	NvEValues_MAXWELL_B_SAMPLE_INTERLEAVE = NvEnumerator;
const
	MAXWELL_B_SAMPLE_INTERLEAVE_OFF = 0;
	MAXWELL_B_SAMPLE_INTERLEAVE_ON = 1;
	MAXWELL_B_SAMPLE_INTERLEAVE_NUM_VALUES = 2;
	MAXWELL_B_SAMPLE_INTERLEAVE_DEFAULT = MAXWELL_B_SAMPLE_INTERLEAVE_OFF;
type
	NvEValues_PRERENDERLIMIT = NvEnumerator;
const
	PRERENDERLIMIT_MIN = $00;
	PRERENDERLIMIT_MAX = $ff;
	PRERENDERLIMIT_APP_CONTROLLED = $00;
	PRERENDERLIMIT_NUM_VALUES = 3;
	PRERENDERLIMIT_DEFAULT = PRERENDERLIMIT_APP_CONTROLLED;
type
	NvEValues_PS_SHADERDISKCACHE = NvEnumerator;
const
	PS_SHADERDISKCACHE_OFF = $00000000;
	PS_SHADERDISKCACHE_ON = $00000001;
	PS_SHADERDISKCACHE_NUM_VALUES = 2;
	PS_SHADERDISKCACHE_DEFAULT = $1;
type
	NvEValues_PS_TEXFILTER_ANISO_OPTS2 = NvEnumerator;
const
	PS_TEXFILTER_ANISO_OPTS2_OFF = $00000000;
	PS_TEXFILTER_ANISO_OPTS2_ON = $00000001;
	PS_TEXFILTER_ANISO_OPTS2_NUM_VALUES = 2;
	PS_TEXFILTER_ANISO_OPTS2_DEFAULT = PS_TEXFILTER_ANISO_OPTS2_OFF;
type
	NvEValues_PS_TEXFILTER_BILINEAR_IN_ANISO = NvEnumerator;
const
	PS_TEXFILTER_BILINEAR_IN_ANISO_OFF = $00000000;
	PS_TEXFILTER_BILINEAR_IN_ANISO_ON = $00000001;
	PS_TEXFILTER_BILINEAR_IN_ANISO_NUM_VALUES = 2;
	PS_TEXFILTER_BILINEAR_IN_ANISO_DEFAULT = PS_TEXFILTER_BILINEAR_IN_ANISO_OFF;
type
	NvEValues_PS_TEXFILTER_DISABLE_TRILIN_SLOPE = NvEnumerator;
const
	PS_TEXFILTER_DISABLE_TRILIN_SLOPE_OFF = $00000000;
	PS_TEXFILTER_DISABLE_TRILIN_SLOPE_ON = $00000001;
	PS_TEXFILTER_DISABLE_TRILIN_SLOPE_NUM_VALUES = 2;
	PS_TEXFILTER_DISABLE_TRILIN_SLOPE_DEFAULT = PS_TEXFILTER_DISABLE_TRILIN_SLOPE_OFF;
type
	NvEValues_PS_TEXFILTER_NO_NEG_LODBIAS = NvEnumerator;
const
	PS_TEXFILTER_NO_NEG_LODBIAS_OFF = $00000000;
	PS_TEXFILTER_NO_NEG_LODBIAS_ON = $00000001;
	PS_TEXFILTER_NO_NEG_LODBIAS_NUM_VALUES = 2;
	PS_TEXFILTER_NO_NEG_LODBIAS_DEFAULT = PS_TEXFILTER_NO_NEG_LODBIAS_OFF;
type
	NvEValues_QUALITY_ENHANCEMENTS = NvEnumerator;
const
	QUALITY_ENHANCEMENTS_HIGHQUALITY = $fffffff6;
	QUALITY_ENHANCEMENTS_QUALITY = $00000000;
	QUALITY_ENHANCEMENTS_PERFORMANCE = $0000000a;
	QUALITY_ENHANCEMENTS_HIGHPERFORMANCE = $00000014;
	QUALITY_ENHANCEMENTS_NUM_VALUES = 4;
	QUALITY_ENHANCEMENTS_DEFAULT = QUALITY_ENHANCEMENTS_QUALITY;
type
	NvEValues_REFRESH_RATE_OVERRIDE = NvEnumerator;
const
	REFRESH_RATE_OVERRIDE_APPLICATION_CONTROLLED = 0;
	REFRESH_RATE_OVERRIDE_HIGHEST_AVAILABLE = 1;
	REFRESH_RATE_OVERRIDE_NUM_VALUES = 2;
	REFRESH_RATE_OVERRIDE_DEFAULT = REFRESH_RATE_OVERRIDE_APPLICATION_CONTROLLED;
type
	NvEValues_SET_POWER_THROTTLE_FOR_PCIe_COMPLIANCE = NvEnumerator;
const
	SET_POWER_THROTTLE_FOR_PCIe_COMPLIANCE_OFF = $00000000;
	SET_POWER_THROTTLE_FOR_PCIe_COMPLIANCE_ON = $00000001;
	SET_POWER_THROTTLE_FOR_PCIe_COMPLIANCE_NUM_VALUES = 2;
	SET_POWER_THROTTLE_FOR_PCIe_COMPLIANCE_DEFAULT = SET_POWER_THROTTLE_FOR_PCIe_COMPLIANCE_OFF;
type
	NvEValues_SET_VAB_DATA = NvEnumerator;
const
	SET_VAB_DATA_ZERO = $00000000;
	SET_VAB_DATA_UINT_ONE = $00000001;
	SET_VAB_DATA_FLOAT_ONE = $3f800000;
	SET_VAB_DATA_FLOAT_POS_INF = $7f800000;
	SET_VAB_DATA_FLOAT_NAN = $7fc00000;
	SET_VAB_DATA_USE_API_DEFAULTS = $ffffffff;
	SET_VAB_DATA_NUM_VALUES = 6;
	SET_VAB_DATA_DEFAULT = SET_VAB_DATA_USE_API_DEFAULTS;
type
	NvEValues_VSYNCMODE = NvEnumerator;
const
	VSYNCMODE_PASSIVE = $60925292;
	VSYNCMODE_FORCEOFF = $08416747;
	VSYNCMODE_FORCEON = $47814940;
	VSYNCMODE_FLIPINTERVAL2 = $32610244;
	VSYNCMODE_FLIPINTERVAL3 = $71271021;
	VSYNCMODE_FLIPINTERVAL4 = $13245256;
	VSYNCMODE_NUM_VALUES = 6;
	VSYNCMODE_DEFAULT = VSYNCMODE_PASSIVE;
type
	NvEValues_VSYNCTEARCONTROL = NvEnumerator;
const
	VSYNCTEARCONTROL_DISABLE = $96861077;
	VSYNCTEARCONTROL_ENABLE = $99941284;
	VSYNCTEARCONTROL_NUM_VALUES = 2;
	VSYNCTEARCONTROL_DEFAULT = VSYNCTEARCONTROL_DISABLE;
 
type
	_SettingDWORDNameString = record
		settingId: NvU32; 
		settingNameString: PWideChar; 
		numSettingValues: NvU32; 
		settingValues: ^ NvU32; 
		defaultValue: NvU32; 
		end;
	SettingDWORDNameString = _SettingDWORDNameString; 
	
	_SettingWSTRINGNameString = record
		settingId: NvU32; 
		settingNameString: PWideChar; 
		numSettingValues: NvU32;
		settingValues: PPWideChar;
		defaultValue: PWideChar;
		end;
	SettingWSTRINGNameString = _SettingWSTRINGNameString; 

///////////////////////////////////////////////////////////////////////////////
// Driver Settings (DRS) APIs
///////////////////////////////////////////////////////////////////////////////
type
	NvDRSSessionHandle  = NvHandle;
	NvDRSProfileHandle  = NvHandle;
	pNvDRSSessionHandle = ^ NvDRSSessionHandle;
	pNvDRSProfileHandle = ^ NvDRSProfileHandle;
const
	NVAPI_UNICODE_STRING_MAX = 2048;
	NVAPI_BINARY_DATA_MAX = 4096;
	NVAPI_SETTING_MAX_VALUES = 100;
type
	NvAPI_UnicodeString = array[0..NVAPI_UNICODE_STRING_MAX-1] of WideChar;
	//NvAPI_UnicodeString = PWideChar;
	pNvAPI_UnicodeString = ^ NvAPI_UnicodeString;
	
	_NVDRS_SETTING_TYPE = (
		NVDRS_DWORD_TYPE,
		NVDRS_BINARY_TYPE,
		NVDRS_STRING_TYPE,
		NVDRS_WSTRING_TYPE);
	NVDRS_SETTING_TYPE = _NVDRS_SETTING_TYPE;
	
	_NVDRS_BINARY_SETTING = record
		valueLength : NvU32;
		valueData : array [0..NVAPI_BINARY_DATA_MAX-1] of NvU8;
		end;
	NVDRS_BINARY_SETTING = _NVDRS_BINARY_SETTING;
	
	_NVDRS_SETTING_VALUES = record
		version : NvU32;
		numSettingValues : NvU32;
		settingType : NVDRS_SETTING_TYPE;
		
		// union
		u32DefaultValue : NvU32;
		binaryDefaultValue : NVDRS_BINARY_SETTING;
		wszDefaultValue : NvAPI_UnicodeString;
		
		settingValues : array [0..NVAPI_SETTING_MAX_VALUES-1] of 
			record
			// union
			u32Value : NvU32;
			binaryValue : NVDRS_BINARY_SETTING;
			wszValue : NvAPI_UnicodeString;
			end;
		end;
	NVDRS_SETTING_VALUES = _NVDRS_SETTING_VALUES;
	pNVDRS_SETTING_VALUES = ^ NVDRS_SETTING_VALUES;
	
	_NVDRS_SETTING_LOCATION = (
		NVDRS_CURRENT_PROFILE_LOCATION,
		NVDRS_GLOBAL_PROFILE_LOCATION,
		NVDRS_BASE_PROFILE_LOCATION);
	//NVDRS_DEFAULT_PROFILE_LOCATION = ?
	NVDRS_SETTING_LOCATION = _NVDRS_SETTING_LOCATION;
	
	_NVDRS_SETTING_V1 = record
		version : NvU32;
		settingName : NvAPI_UnicodeString;
		settingId : NvU32;
		settingType : NVDRS_SETTING_TYPE;
		settingLocation : NVDRS_SETTING_LOCATION;
		isCurrentPredefined : NvU32;
		isPredefinedValid : NvU32;
		
		// union
		u32PredefinedValue : NvU32;
		binaryPredefinedValue : NVDRS_BINARY_SETTING;
		wszPredefinedValue : NvAPI_UnicodeString;
		
		// union
		u32CurrentValue : NvU32;
		binaryCurrentValue : NVDRS_BINARY_SETTING;
		wszCurrentValue : NvAPI_UnicodeString;
		end;
	NVDRS_SETTING_V1 =  _NVDRS_SETTING_V1;
	NVDRS_SETTING = NVDRS_SETTING_V1;
	pNVDRS_SETTING = ^ NVDRS_SETTING;

// macro NVDRS_SETTING_VER1, NVDRS_SETTING_VER
function MAKE_NVAPI_VERSION(const SizeOfTypeName, Version : NvU32) : NvU32;
function NVDRS_SETTING_VER() : NvU32;
function GET_NVAPI_VERSION(const Version : NvU32) : NvU16;
function GET_NVAPI_SIZE(const Version : NvU32) : NvU16;

type
	_NVDRS_APPLICATION_V4 = record
		version : NvU32;
		isPredefined : NvU32;
		appName : NvAPI_UnicodeString;
		userFriendlyName: NvAPI_UnicodeString;
		launcher: NvAPI_UnicodeString;
		fileInFolder: NvAPI_UnicodeString;
		flags : NvU32;
		commandLine : NvAPI_UnicodeString;
		end;
const
	NVDRS_APPLICATION_V4_isMetro       = $8000000000;
	NVDRS_APPLICATION_V4_isCommandLine = $4000000000;
	NVDRS_APPLICATION_V4_reserved      = $3fffffffff;
type
	NVDRS_APPLICATION_V4 = _NVDRS_APPLICATION_V4;
	NVDRS_APPLICATION = NVDRS_APPLICATION_V4;
	pNVDRS_APPLICATION = ^ NVDRS_APPLICATION;
type
	_NVDRS_GPU_SUPPORT = NvU32;
	NVDRS_GPU_SUPPORT = _NVDRS_GPU_SUPPORT;
const
	NVDRS_GPU_SUPPORT_geforce  = $8000000000;
	NVDRS_GPU_SUPPORT_quadro   = $4000000000;
	NVDRS_GPU_SUPPORT_nvs      = $2000000000;
	NVDRS_GPU_SUPPORT_reserved = $1fffffffff;
type
	_NVDRS_PROFILE_V1 = record
		version : NvU32;
		profileName : NvAPI_UnicodeString;
		gpuSupport : NVDRS_GPU_SUPPORT;
		isPredefined : NvU32;
		numOfApps : NvU32;
		numOfSettings : NvU32;
		end;
	NVDRS_PROFILE_V1 = _NVDRS_PROFILE_V1;
	NVDRS_PROFILE = NVDRS_PROFILE_V1;
	pNVDRS_PROFILE = ^ NVDRS_PROFILE;
var
	NvAPI_DRS_CreateProfile : function (hSession : NvDRSSessionHandle; pProfileInfo : pNVDRS_PROFILE; phProfile : pNvDRSProfileHandle) : NvAPI_Status; cdecl;
	NvAPI_DRS_DeleteProfile : function (hSession : NvDRSSessionHandle; hProfile : NvDRSProfileHandle) : NvAPI_Status; cdecl;
	NvAPI_DRS_SetCurrentGlobalProfile : function (hSession : NvDRSSessionHandle; wszGlobalProfileName : NvAPI_UnicodeString) : NvAPI_Status; cdecl;
	NvAPI_DRS_GetCurrentGlobalProfile : function (hSession : NvDRSSessionHandle; phProfile : pNvDRSProfileHandle) : NvAPI_Status; cdecl;
	NvAPI_DRS_GetProfileInfo : function (hSession : NvDRSSessionHandle; hProfile : NvDRSProfileHandle; pProfileInfo: pNVDRS_PROFILE) : NvAPI_Status; cdecl;
	NvAPI_DRS_SetProfileInfo : function (hSession : NvDRSSessionHandle; hProfile : NvDRSProfileHandle; pProfileInfo : pNVDRS_PROFILE) : NvAPI_Status; cdecl;
	NvAPI_DRS_FindProfileByName : function (hSession : NvDRSSessionHandle; profileName : NvAPI_UnicodeString; phProfile : pNvDRSProfileHandle) : NvAPI_Status; cdecl;
	NvAPI_DRS_EnumProfiles : function (hSession : NvDRSSessionHandle; index : NvU32; phProfile : pNvDRSProfileHandle) : NvAPI_Status; cdecl;
	NvAPI_DRS_GetNumProfiles : function (hSession : NvDRSSessionHandle; var numProfiles : NvU32) : NvAPI_Status; cdecl;
	NvAPI_DRS_CreateApplication : function (hSession : NvDRSSessionHandle; hProfile : NvDRSProfileHandle; pApplication : pNVDRS_APPLICATION) : NvAPI_Status; cdecl;
	NvAPI_DRS_DeleteApplicationEx : function (hSession : NvDRSSessionHandle; hProfile : NvDRSProfileHandle; pApp : pNVDRS_APPLICATION) : NvAPI_Status; cdecl;
	NvAPI_DRS_DeleteApplication : function (hSession : NvDRSSessionHandle; hProfile : NvDRSProfileHandle; appName : NvAPI_UnicodeString) : NvAPI_Status; cdecl;
	NvAPI_DRS_GetApplicationInfo : function (hSession : NvDRSSessionHandle; hProfile : NvDRSProfileHandle; appName : NvAPI_UnicodeString; pApplication : pNVDRS_APPLICATION) : NvAPI_Status; cdecl;
	NvAPI_DRS_EnumApplications : function (hSession : NvDRSSessionHandle; hProfile : NvDRSProfileHandle; startIndex : NvU32; appCount : pNvU32; pApplication : pNVDRS_APPLICATION) : NvAPI_Status; cdecl;
	NvAPI_DRS_FindApplicationByName : function (hSession : NvDRSSessionHandle; appName : NvAPI_UnicodeString;{out} phProfile : pNvDRSProfileHandle;{inout} var Application : NVDRS_APPLICATION) : NvAPI_Status; cdecl;
	NvAPI_DRS_SetSetting : function (hSession : NvDRSSessionHandle; phProfile : NvDRSProfileHandle; pSetting : pNVDRS_SETTING) : NvAPI_Status; cdecl;
	NvAPI_DRS_GetSetting : function (hSession : NvDRSSessionHandle; hProfile : NvDRSProfileHandle; settingId : NvU32; pSetting : pNVDRS_SETTING) : NvAPI_Status; cdecl;
	NvAPI_DRS_EnumSettings : function (hSession : NvDRSSessionHandle; hProfile : NvDRSProfileHandle; startIndex : NvU32; settingsCount : pNvU32; pSetting : pNVDRS_SETTING) : NvAPI_Status; cdecl;
	NvAPI_DRS_EnumAvailableSettingIds : function (pSettingIds : pNvU32; pMaxCount : pNvU32) : NvAPI_Status; cdecl;
	NvAPI_DRS_EnumAvailableSettingValues : function (settingId : NvU32; pMaxNumValues : pNvU32; pSettingValues : pNVDRS_SETTING_VALUES) : NvAPI_Status; cdecl;
	NvAPI_DRS_GetSettingIdFromName : function (settingName : NvAPI_UnicodeString; pSettingId : pNvU32) : NvAPI_Status; cdecl;
	NvAPI_DRS_GetSettingNameFromId : function (settingId : NvU32; pSettingName : pNvAPI_UnicodeString) : NvAPI_Status; cdecl;
	NvAPI_DRS_RestoreProfileDefaultSetting : function (hSession : NvDRSSessionHandle; hProfile : NvDRSProfileHandle; settingId : NvU32) : NvAPI_Status; cdecl;
	NvAPI_DRS_DeleteProfileSetting : function (hSession : NvDRSSessionHandle; hProfile : NvDRSProfileHandle; settingId : NvU32) : NvAPI_Status; cdecl;
	NvAPI_DRS_RestoreAllDefaults : function (hSession : NvDRSSessionHandle) : NvAPI_Status; cdecl;
	NvAPI_DRS_RestoreProfileDefault : function (hSession : NvDRSSessionHandle; hProfile : NvDRSProfileHandle) : NvAPI_Status; cdecl;
	NvAPI_DRS_GetBaseProfile : function (hSession : NvDRSSessionHandle; phProfile : pNvDRSProfileHandle) : NvAPI_Status; cdecl;
var
	NvAPI_DRS_CreateSession : function (phSession : pNvDRSSessionHandle) : NvAPI_Status; cdecl;
	NvAPI_DRS_DestroySession : function (hSession : NvDRSSessionHandle) : NvAPI_Status; cdecl;
	NvAPI_DRS_LoadSettings : function (hSession : NvDRSSessionHandle) : NvAPI_Status; cdecl;
	NvAPI_DRS_SaveSettings : function (hSession : NvDRSSessionHandle) : NvAPI_Status; cdecl;
	NvAPI_DRS_LoadSettingsFromFile : function (hSession : NvDRSSessionHandle; fileName : NvAPI_UnicodeString) : NvAPI_Status; cdecl;
	NvAPI_DRS_SaveSettingsToFile : function (hSession : NvDRSSessionHandle; fileName : NvAPI_UnicodeString) : NvAPI_Status; cdecl;

implementation

uses
	 nvapi_loader
	;

function MAKE_NVAPI_VERSION(const SizeOfTypeName, Version : NvU32) : NvU32;
begin
Result := SizeOfTypeName or (Version shl 16);
end;

function NVDRS_SETTING_VER() : NvU32;
begin
Result := MAKE_NVAPI_VERSION(SizeOf(NVDRS_SETTING), 1);
end;

function GET_NVAPI_VERSION(const Version : NvU32) : NvU16;
begin
Result := (Version and $ffff0000) shr 16;
end;

function GET_NVAPI_SIZE(const Version : NvU32) : NvU16;
begin
Result := Version and $ffff;
end;

end.
